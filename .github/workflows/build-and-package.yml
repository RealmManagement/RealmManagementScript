# .github/workflows/build-and-package.yml

name: Create Release for Realm Management Script

# 当一个以 'v' 开头的标签 (例如 v1.0, v2.1.3) 被推送到仓库时触发
on:
  push:
    tags:
      - 'v*'

jobs:
  # === 作业 1: 构建带 Python 环境的包 ===
  build_with_env:
    name: Build with Python Environment
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 安装conda
      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.11"

      # 创建conda环境
      - name: Create Conda environment
        run: |
          conda env create -f environment.yml

      # 使用conda-pack打包python环境
      - name: Pack Conda environment
        run: |

          conda install -n base conda-pack
          

          conda pack -n realm-management-env -o packed_env.tar.gz

      # 打包源代码和虚拟环境
      - name: Package application with environment
        run: |
          mkdir packages
          
          tar -czvf packages/realm-management-script-with-venv.tar.gz packed_env.tar.gz --transform='s|packed_env.tar.gz|venv.tar.gz|' --exclude='./.git' --exclude='./.github' --exclude='./.gitattributes' --exclude='./packages' --exclude='./venv' .

      # 上传构建产物
      - name: Upload artifact (with-env)
        uses: actions/upload-artifact@v4
        with:
          name: package-with-venv
          path: packages/realm-management-script-with-venv.tar.gz

  # === 作业 2: 构建纯源码的包 ===
  build_source_only:
    name: Build Source Code Only
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 仅打包源代码
      - name: Package source code
        run: |
          mkdir packages
          
          tar -czvf packages/realm-management-script.tar.gz --exclude='./.git' --exclude='./.github' --exclude='./.gitattributes' --exclude='./packages' .

      # 上传构建产物
      - name: Upload artifact (source-only)
        uses: actions/upload-artifact@v4
        with:
          name: package-source-only
          path: packages/realm-management-script.tar.gz

  # === 作业 3: 创建 GitHub Release 并上传所有包 ===
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build_with_env, build_source_only] # 等待前两个作业成功完成后再运行

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # 下载第一个包（带环境）
      - name: Download with-env package
        uses: actions/download-artifact@v4
        with:
          name: package-with-venv

      # 下载第二个包（纯源码）
      - name: Download source-only package
        uses: actions/download-artifact@v4
        with:
          name: package-source-only
        
      # 创建 Release 并上传附件
      - name: Create Release and Upload Assets with GitHub CLI
        env:
          # The GITHUB_TOKEN is automatically used by gh cli for authentication.
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION_TAG=${{ github.ref_name }}
          gh release create $VERSION_TAG \
            --title "$VERSION_TAG" \
            --notes "Release created automatically by GitHub Actions." \
            realm-management-script-with-venv.tar.gz \
            realm-management-script.tar.gz
